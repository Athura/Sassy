/*
    called a reset
    Universal header for all browsers
    border-box look up
    font weight will always be based off of Lato's given amounts in HTML 
*/

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 30px;
}

/*
    vh = viewport height, so 95% of vh
    linear gradient can specify "to right, left, top, bottom, right bottom before first color
    Need to clip bottom right of img, specify 4 corners top left, top right, bottom right, bottom left. Use clippy.com
*/
.header {
    height: 95vh;
    background-image:  linear-gradient( to right bottom,
                                       rgba($color-primary-light, 0.8),
                                       rgba($color-primary-dark, 0.8)), 
                                       url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/*
    Absolute positioning
    header is parent element, needs postion: relative
*/
.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

/*
    transform: translate, relates to child element, not parent
    Makes it possible to be in the exact middle of element
*/
.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    
    backface-visibility: hidden;
    margin-bottom: 40px;
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-out;

    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 3s;
    animation-timing-function: ease-out;
}

/*
    heading primary mains animation
    0% is start, 100% is end
    best practice is only opacity and transform
    use translate x to move the text in x direction
    -100 starts left, 100 starts right
*/
@keyframes moveInLeft{
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight{
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom{
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0px);
    }
}

/*
    Pseudo class to style elements under a special condition
    visited state is another special state to change how element will look afterward
    uses text-align in text-box to center button
    transform translateY to give the button a moving up animation
    border-radius for oval look
    box shadow is 0px up, 10px down, 20px blur
    animation fill mode will automatically apply styles before animation starts
*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 200px;
    transition: all .2s;
    position: relative;
}

.btn:hover{
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

.btn:active{
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after{
    background-color: $color-white;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
} 

.btn-animated {
    animation: moveInBottom 1.25s ease-out 1.25s;
    animation-fill-mode: backwards;
}