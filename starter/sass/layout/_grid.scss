/*
    max width helps website be more responsive
    if enough space then grid will have space we specified
    margin 0 auto centers block elements inside another block element, browser will automatically figure out margin
    class^= selects all the attributes that start with whatever is to the right
    class*= contain
    class$= ends
*/
.row {
    max-width: $grid-width;
    margin: 0 auto;
    

    &:not(:last-child){
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    [class^="col-"] {
        float: left;

        &:not(:last-child){
            margin-right: $horizontal-gutter;

            //theyll all be side by side so no need for margin
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$horizontal-gutter}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$horizontal-gutter}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$horizontal-gutter}) / 3) + #{$horizontal-gutter});
    }

    .col-1-of-4 {
        width: calc((100% -  3* #{$horizontal-gutter}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$horizontal-gutter}) / 4) + #{$horizontal-gutter});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$horizontal-gutter}) / 4) + 2 * #{$horizontal-gutter});
    }
}

//.row:not()