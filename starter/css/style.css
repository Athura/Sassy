/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*
    called a reset
    Universal header for all browsers
    border-box look up
    font weight will always be based off of Lato's given amounts in HTML 
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

/*
    vh = viewport height, so 95% of vh
    linear gradient can specify "to right, left, top, bottom, right bottom before first color
    Need to clip bottom right of img, specify 4 corners top left, top right, bottom right, bottom left. Use clippy.com
*/
.header {
    height: 95vh;
    background-image:  linear-gradient( to right bottom,
                                       rgba(105, 207, 87, 0.8),
                                       rgba(33, 168, 121, 0.8)), 
                                       url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/*
    Absolute positioning
    header is parent element, needs postion: relative
*/
.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

/*
    transform: translate, relates to child element, not parent
    Makes it possible to be in the exact middle of element
*/
.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.heading-primary {
    color: #ffffff;
    text-transform: uppercase;
    
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-out;

    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
}

/*
    heading primary mains animation
    0% is start, 100% is end
    best practice is only opacity and transform
    use translate x to move the text in x direction
*/
@keyframes moveInLeft{
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}